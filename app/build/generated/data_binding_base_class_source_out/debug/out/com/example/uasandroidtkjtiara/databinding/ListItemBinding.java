// Generated by view binder compiler. Do not edit!
package com.example.uasandroidtkjtiara.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.uasandroidtkjtiara.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final CardView cardViewItem;

  @NonNull
  public final TextView textViewBody;

  @NonNull
  public final TextView textViewHarga;

  @NonNull
  public final TextView textViewJumlah;

  @NonNull
  public final TextView textViewKeterangan;

  @NonNull
  public final TextView textViewNilai;

  @NonNull
  public final TextView textViewTitle;

  @NonNull
  public final TextView textViewTotal;

  private ListItemBinding(@NonNull CardView rootView, @NonNull CardView cardViewItem,
      @NonNull TextView textViewBody, @NonNull TextView textViewHarga,
      @NonNull TextView textViewJumlah, @NonNull TextView textViewKeterangan,
      @NonNull TextView textViewNilai, @NonNull TextView textViewTitle,
      @NonNull TextView textViewTotal) {
    this.rootView = rootView;
    this.cardViewItem = cardViewItem;
    this.textViewBody = textViewBody;
    this.textViewHarga = textViewHarga;
    this.textViewJumlah = textViewJumlah;
    this.textViewKeterangan = textViewKeterangan;
    this.textViewNilai = textViewNilai;
    this.textViewTitle = textViewTitle;
    this.textViewTotal = textViewTotal;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      CardView cardViewItem = (CardView) rootView;

      id = R.id.text_view_body;
      TextView textViewBody = ViewBindings.findChildViewById(rootView, id);
      if (textViewBody == null) {
        break missingId;
      }

      id = R.id.text_view_harga;
      TextView textViewHarga = ViewBindings.findChildViewById(rootView, id);
      if (textViewHarga == null) {
        break missingId;
      }

      id = R.id.text_view_jumlah;
      TextView textViewJumlah = ViewBindings.findChildViewById(rootView, id);
      if (textViewJumlah == null) {
        break missingId;
      }

      id = R.id.text_view_keterangan;
      TextView textViewKeterangan = ViewBindings.findChildViewById(rootView, id);
      if (textViewKeterangan == null) {
        break missingId;
      }

      id = R.id.text_view_nilai;
      TextView textViewNilai = ViewBindings.findChildViewById(rootView, id);
      if (textViewNilai == null) {
        break missingId;
      }

      id = R.id.text_view_title;
      TextView textViewTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewTitle == null) {
        break missingId;
      }

      id = R.id.text_view_total;
      TextView textViewTotal = ViewBindings.findChildViewById(rootView, id);
      if (textViewTotal == null) {
        break missingId;
      }

      return new ListItemBinding((CardView) rootView, cardViewItem, textViewBody, textViewHarga,
          textViewJumlah, textViewKeterangan, textViewNilai, textViewTitle, textViewTotal);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
